{"version":3,"file":"index.js","sources":["../index.js"],"sourcesContent":["import { applyMiddleware, createStore, combineReducers } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport thunk from \"redux-thunk\";\n\nconst configureStore = (\n  substores = {},\n  middlewares = [],\n  persistConfig = {\n    key: \"root\",\n    storage,\n    blacklist: [],\n  }\n) => {\n  middlewares.push(thunk);\n\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n\n  persistConfig = { blacklist: [], ...persistConfig };\n  const stores = {};\n  const actionNames = [];\n\n  const types = {};\n\n  for (const substoreKey in substores) {\n    const substore = substores[substoreKey];\n    if (substore.blacklisted) {\n      persistConfig.blacklist.push(substoreKey);\n    }\n    stores[substoreKey] = substore.reducer(types);\n    actionNames.push(substore.actionNames);\n  }\n\n  // check, that action names are unique\n  actionNames.forEach((ans) =>\n    ans.forEach((actionName) => {\n      if (typeof actionName !== \"string\") {\n        throw new Error(\n          \"ERROR, some action-names are not strings! \" + JSON.stringify(ans)\n        );\n      }\n      types[actionName] = { name: actionName };\n    })\n  );\n\n  if (\n    Object.keys(types).length !==\n    actionNames.reduce((a, b) => a + Object.keys(b).length, 0)\n  ) {\n    throw new Error(\n      \"ERROR, not all action-names are unique! \" +\n        JSON.stringify(actionNames) +\n        JSON.stringify(types)\n    );\n  }\n\n  const store = createStore(\n    persistReducer(persistConfig, combineReducers(stores)),\n    middlewareEnhancer\n  );\n  const persistor = persistStore(store);\n  return { store, persistor };\n};\n\nexport default configureStore;\n"],"names":["configureStore","substores","middlewares","persistConfig","key","storage","blacklist","push","thunk","middlewareEnhancer","applyMiddleware","stores","actionNames","types","substoreKey","substore","blacklisted","reducer","forEach","ans","actionName","Error","JSON","stringify","name","Object","keys","length","reduce","a","b","store","createStore","persistReducer","combineReducers","persistor","persistStore"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,GAQlB;AAAA,MAPHC,SAOG,uEAPS,EAOT;AAAA,MANHC,WAMG,uEANW,EAMX;AAAA,MALHC,aAKG,uEALa;AACdC,IAAAA,GAAG,EAAE,MADS;AAEdC,IAAAA,OAAO,EAAPA,OAFc;AAGdC,IAAAA,SAAS,EAAE;AAHG,GAKb;AACHJ,EAAAA,WAAW,CAACK,IAAZ,CAAiBC,KAAjB;AAEA,MAAMC,kBAAkB,GAAGC,qBAAe,MAAf,4BAAmBR,WAAnB,EAA3B;AAEAC,EAAAA,aAAa;AAAKG,IAAAA,SAAS,EAAE;AAAhB,KAAuBH,aAAvB,CAAb;AACA,MAAMQ,MAAM,GAAG,EAAf;AACA,MAAMC,WAAW,GAAG,EAApB;AAEA,MAAMC,KAAK,GAAG,EAAd;;AAEA,OAAK,IAAMC,WAAX,IAA0Bb,SAA1B,EAAqC;AACnC,QAAMc,QAAQ,GAAGd,SAAS,CAACa,WAAD,CAA1B;;AACA,QAAIC,QAAQ,CAACC,WAAb,EAA0B;AACxBb,MAAAA,aAAa,CAACG,SAAd,CAAwBC,IAAxB,CAA6BO,WAA7B;AACD;;AACDH,IAAAA,MAAM,CAACG,WAAD,CAAN,GAAsBC,QAAQ,CAACE,OAAT,CAAiBJ,KAAjB,CAAtB;AACAD,IAAAA,WAAW,CAACL,IAAZ,CAAiBQ,QAAQ,CAACH,WAA1B;AACD,GAlBE;;;AAqBHA,EAAAA,WAAW,CAACM,OAAZ,CAAoB,UAACC,GAAD;AAAA,WAClBA,GAAG,CAACD,OAAJ,CAAY,UAACE,UAAD,EAAgB;AAC1B,UAAI,OAAOA,UAAP,KAAsB,QAA1B,EAAoC;AAClC,cAAM,IAAIC,KAAJ,CACJ,+CAA+CC,IAAI,CAACC,SAAL,CAAeJ,GAAf,CAD3C,CAAN;AAGD;;AACDN,MAAAA,KAAK,CAACO,UAAD,CAAL,GAAoB;AAAEI,QAAAA,IAAI,EAAEJ;AAAR,OAApB;AACD,KAPD,CADkB;AAAA,GAApB;;AAWA,MACEK,MAAM,CAACC,IAAP,CAAYb,KAAZ,EAAmBc,MAAnB,KACAf,WAAW,CAACgB,MAAZ,CAAmB,UAACC,CAAD,EAAIC,CAAJ;AAAA,WAAUD,CAAC,GAAGJ,MAAM,CAACC,IAAP,CAAYI,CAAZ,EAAeH,MAA7B;AAAA,GAAnB,EAAwD,CAAxD,CAFF,EAGE;AACA,UAAM,IAAIN,KAAJ,CACJ,6CACEC,IAAI,CAACC,SAAL,CAAeX,WAAf,CADF,GAEEU,IAAI,CAACC,SAAL,CAAeV,KAAf,CAHE,CAAN;AAKD;;AAED,MAAMkB,KAAK,GAAGC,iBAAW,CACvBC,2BAAc,CAAC9B,aAAD,EAAgB+B,qBAAe,CAACvB,MAAD,CAA/B,CADS,EAEvBF,kBAFuB,CAAzB;AAIA,MAAM0B,SAAS,GAAGC,yBAAY,CAACL,KAAD,CAA9B;AACA,SAAO;AAAEA,IAAAA,KAAK,EAALA,KAAF;AAASI,IAAAA,SAAS,EAATA;AAAT,GAAP;AACD,CAzDD;;;;"}